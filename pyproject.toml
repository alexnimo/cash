[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "video-analyzer"
version = "0.1.0"
description = "YouTube Video Analysis Platform"
requires-python = ">=3.9"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # Core dependencies
    "yt-dlp>=2023.12.30",
    "moviepy>=1.0.3",
    "pydantic>=2.5.2",
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "websockets>=11.0.3",
    "python-multipart>=0.0.6",
    "pyyaml>=6.0.1",
    "openai>=1.8.0,<2.0.0",
    "aiohttp>=3.9.1",
    "asyncio>=3.4.3",
    "fastapi-cors>=0.0.6",
    "jinja2>=3.1.2",
    "google-cloud-aiplatform>=1.36.4",
    "google-generativeai>=0.5.2",
    "youtube-transcript-api>=0.6.1",
    "reportlab>=4.0.8",
    "PyPDF2>=3.0.0",
    "notion-client>=2.1.0",
    "lancedb>=0.3.3",
    "pydantic-settings>=2.1.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "psycopg2-binary>=2.9.9",
    "boto3>=1.29.3",
    "python-magic>=0.4.27",
    "numpy>=1.21.0",
    "python-dotenv>=0.19.0",
    "croniter>=1.3.0",
    # LlamaIndex and related packages
    "llama-index-core>=0.10.1",
    "llama-index-llms-gemini>=0.1.2",
    "llama-index-vector-stores-pinecone>=0.1.2",
    "llama-index-llms-openai-like>=0.1.2",
    "llama-index-embeddings-gemini",
    "sentence-transformers>=2.2.2",
    "llama-index-embeddings-huggingface",
    "einops",
    "json-repair>=0.44.1",
    "pinecone[grpc]>=4.0.0,<5.0.0",
    "pydub[pyaudioop]>=0.25.1",
    "pytubefix>=9.4.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-mock>=3.11.1",
    "black",
    "isort",
    "flake8",
    "mypy",
]
test = [
    "pytest>=7.4.0",
    "pytest-mock>=3.11.1",
]

[project.scripts]
video-analyzer = "app.main:app"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-mock>=3.11.1",
    "black",
    "isort",
    "flake8",
    "mypy",
]


[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["video_analyzer"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "moviepy.*",
    "yt_dlp.*",
    "notion_client.*",
    "pinecone.*",
    "lancedb.*",
    "llama_index.*",
]
ignore_missing_imports = true
